{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currPosition","maxPosition","props","itemWidth","images","length","frameSize","stepSize","step","nextHandler","infinite","setState","prevState","prevHandler","this","animationDuration","className","style","width","transform","transition","map","image","index","height","src","alt","type","onClick","React","Component","App","imgWidth","animationDur","inputHandler","event","currentTarget","name","value","htmlFor","id","min","placeholder","onBlur","ReactDOM","render","document","getElementById"],"mappings":"uPAgBaA,EAAb,4MACEC,MAAQ,CACNC,aAAc,GAFlB,EAKEC,YAAc,EAAKC,MAAMC,WACpB,EAAKD,MAAME,OAAOC,OAAS,EAAKH,MAAMI,WAN7C,EAQEC,SAAW,EAAKL,MAAMC,UAAY,EAAKD,MAAMM,KAR/C,EAiBEC,YAAc,WACZ,IAAQT,EAAiB,EAAKD,MAAtBC,aACR,EAAgC,EAAKE,MAA7BC,EAAR,EAAQA,UAAWO,EAAnB,EAAmBA,SAEfV,EAAe,EAAKO,SAAW,EAAKN,aACtC,EAAKU,UAAS,SAACC,GAAD,MAAgB,CAC5BZ,aAAcY,EAAUZ,aAAe,EAAKO,aAI5CP,EAAe,EAAKO,UAAY,EAAKN,aACpCD,EAAe,EAAKC,aACvB,EAAKU,SAAS,CAAEX,aAAc,EAAKC,cAGjCD,EAAeG,EAAY,EAAKF,aAC/BD,GAAgB,EAAKC,aACrBS,GACH,EAAKC,SAAS,CAAEX,aAAc,KAnCpC,EAuCEa,YAAc,WACZ,IAAQb,EAAiB,EAAKD,MAAtBC,aACR,EAA2C,EAAKE,MAAxCC,EAAR,EAAQA,UAAWO,EAAnB,EAAmBA,SAAUJ,EAA7B,EAA6BA,UAEzBN,GAAgB,EAAKO,UACvB,EAAKI,UAAS,SAACC,GAAD,MAAgB,CAC5BZ,aAAcY,EAAUZ,aAAe,EAAKO,aAI5CP,EAAgBG,EAAYG,GAC9B,EAAKK,SAAS,CACZX,aAAc,IAIG,IAAjBA,GAAsBU,GACxB,EAAKC,SAAS,CACZX,aAAc,EAAKC,eAzD3B,wDAUE,WACEa,KAAKb,YAAea,KAAKZ,MAAMC,UAAYW,KAAKZ,MAAME,OAAOC,OAC1DS,KAAKZ,MAAMC,UAAYW,KAAKZ,MAAMI,UAErCQ,KAAKP,SAAWO,KAAKZ,MAAMC,UAAYW,KAAKZ,MAAMM,OAdtD,oBA8DE,WACE,MAKIM,KAAKZ,MAJPE,EADF,EACEA,OACAD,EAFF,EAEEA,UACAG,EAHF,EAGEA,UACAS,EAJF,EAIEA,kBAEMf,EAAiBc,KAAKf,MAAtBC,aAER,OACE,sBACEgB,UAAU,WACVC,MAAO,CAAEC,MAAM,GAAD,OAAKf,EAAYG,EAAjB,OAFhB,UAIE,oBACEU,UAAU,iBACVC,MAAO,CACLE,UAAU,eAAD,OAAiBnB,EAAjB,OACToB,WAAW,aAAD,OAAeL,EAAf,MACVG,MAAM,GAAD,OAAKJ,KAAKZ,MAAMC,UAAYW,KAAKZ,MAAME,OAAOC,OAA9C,OALT,SAQGD,EAAOiB,KAAI,SAACC,EAAOC,GAAR,OACV,oBAEEN,MAAO,CAAEC,MAAM,GAAD,OAAKf,EAAL,MAAoBqB,OAAO,GAAD,OAAKrB,EAAL,OAF1C,SAIE,qBACEsB,IAAKH,EACLI,IAAG,UAAKH,EAAQ,GAChBN,MAAO,CAAEC,MAAM,GAAD,OAAKf,EAAL,MAAoBqB,OAAO,GAAD,OAAKrB,EAAL,UAP5C,UACUoB,EAAQ,SAWtB,sBAAKP,UAAU,6BAAf,UACE,wBACEA,UAAU,mBACVW,KAAK,SACLC,QAASd,KAAKD,YAHhB,oBAOA,wBACEG,UAAU,mBACVW,KAAK,SACL,UAAQ,OACRC,QAASd,KAAKL,YAJhB,8BAzGV,GAA8BoB,IAAMC,WCH9BC,E,4MACJhC,MAAQ,CACNK,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFI,KAAM,EACNF,UAAW,EACX0B,SAAU,IACVC,aAAc,IACdvB,UAAU,G,EAIZwB,aAAe,SAACC,GACd,OAAQA,EAAMC,cAAcC,MAC1B,IAAK,YAOH,aANKF,EAAMC,cAAcE,MAAQ,EAC/B,EAAK3B,SAAS,CAAEqB,UAAWG,EAAMC,cAAcE,QAE/C,EAAK3B,SAAS,CAAEqB,SAAU,OAM9B,IAAK,YAQH,aAPKG,EAAMC,cAAcE,QACnBH,EAAMC,cAAcE,OAAS,EAAKvC,MAAMK,OAAOC,OACnD,EAAKM,SAAS,CAAEL,WAAY6B,EAAMC,cAAcE,QAEhD,EAAK3B,SAAS,CAAEL,UAAW,KAM/B,IAAK,OAOH,aANK6B,EAAMC,cAAcE,MAAQ,EAC/B,EAAK3B,SAAS,CAAEH,MAAO2B,EAAMC,cAAcE,QAE3C,EAAK3B,SAAS,CAAEH,KAAM,KAM1B,IAAK,qBACE2B,EAAMC,cAAcE,MAAQ,IAC/B,EAAK3B,SAAS,CAAEsB,cAAeE,EAAMC,cAAcE,QAEnD,EAAK3B,SAAS,CAAEsB,aAAc,Q,4CAUtC,WACE,MAOInB,KAAKf,MANPK,EADF,EACEA,OACAI,EAFF,EAEEA,KACAF,EAHF,EAGEA,UACA0B,EAJF,EAIEA,SACAC,EALF,EAKEA,aACAvB,EANF,EAMEA,SAGF,OACE,sBAAKM,UAAU,MAAf,UACE,oBAAI,UAAQ,QAAZ,iCAAsCZ,EAAOC,OAA7C,aACA,cAAC,EAAD,CACED,OAAQA,EACRI,KAAMA,EACNF,UAAWA,EACXH,UAAW6B,EACXjB,kBAAmBkB,EACnBvB,SAAUA,IAEZ,sBAAKM,UAAU,mBAAf,UACE,wBAAOuB,QAAQ,YAAf,wBAEE,uBACEZ,KAAK,SACLU,KAAK,YACLG,GAAG,YACHC,IAAK,GACLC,YAAY,MACZC,OAAQ7B,KAAKoB,kBAGjB,wBAAOK,QAAQ,YAAf,wBAEE,uBACEZ,KAAK,SACLU,KAAK,YACLG,GAAG,YACHC,IAAK,EACLC,YAAY,IACZC,OAAQ7B,KAAKoB,kBAGjB,wBAAOK,QAAQ,OAAf,kBAEE,uBACEZ,KAAK,SACLU,KAAK,OACLG,GAAG,OACHC,IAAK,EACLC,YAAY,IACZC,OAAQ7B,KAAKoB,kBAGjB,wBAAOK,QAAQ,oBAAf,gCAEE,uBACEZ,KAAK,SACLU,KAAK,oBACLG,GAAG,oBACHE,YAAY,OACZC,OAAQ7B,KAAKoB,4B,GAnITL,IAAMC,WA4ITC,ICtJfa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.91953f3f.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype State = {\n  currPosition: number,\n};\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    currPosition: 0,\n  };\n\n  maxPosition = this.props.itemWidth\n    * (this.props.images.length - this.props.frameSize);\n\n  stepSize = this.props.itemWidth * this.props.step;\n\n  componentDidUpdate() {\n    this.maxPosition = (this.props.itemWidth * this.props.images.length)\n    - (this.props.itemWidth * this.props.frameSize);\n\n    this.stepSize = this.props.itemWidth * this.props.step;\n  }\n\n  nextHandler = () => {\n    const { currPosition } = this.state;\n    const { itemWidth, infinite } = this.props;\n\n    if (currPosition + this.stepSize < this.maxPosition) {\n      this.setState((prevState) => ({\n        currPosition: prevState.currPosition + this.stepSize,\n      }));\n    }\n\n    if (currPosition + this.stepSize >= this.maxPosition\n      && currPosition < this.maxPosition) {\n      this.setState({ currPosition: this.maxPosition });\n    }\n\n    if (currPosition + itemWidth > this.maxPosition\n      && currPosition >= this.maxPosition\n      && infinite) {\n      this.setState({ currPosition: 0 });\n    }\n  };\n\n  prevHandler = () => {\n    const { currPosition } = this.state;\n    const { itemWidth, infinite, frameSize } = this.props;\n\n    if (currPosition >= this.stepSize) {\n      this.setState((prevState) => ({\n        currPosition: prevState.currPosition - this.stepSize,\n      }));\n    }\n\n    if (currPosition < (itemWidth * frameSize)) {\n      this.setState({\n        currPosition: 0,\n      });\n    }\n\n    if (currPosition === 0 && infinite) {\n      this.setState({\n        currPosition: this.maxPosition,\n      });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.props;\n    const { currPosition } = this.state;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{ width: `${itemWidth * frameSize}px` }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(-${currPosition}px)`,\n            transition: `transform ${animationDuration}ms`,\n            width: `${this.props.itemWidth * this.props.images.length}px`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li\n              key={`${index + 1}`}\n              style={{ width: `${itemWidth}px`, height: `${itemWidth}px` }}\n            >\n              <img\n                src={image}\n                alt={`${index + 1}`}\n                style={{ width: `${itemWidth}px`, height: `${itemWidth}px` }}\n              />\n            </li>\n          ))}\n        </ul>\n        <div className=\"Carousel__button-container\">\n          <button\n            className=\"Carousel__button\"\n            type=\"button\"\n            onClick={this.prevHandler}\n          >\n            &#10094;\n          </button>\n          <button\n            className=\"Carousel__button\"\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={this.nextHandler}\n          >\n            &#10095;\n          </button>\n        </div>\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  imgWidth: number,\n  animationDur: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    imgWidth: 130,\n    animationDur: 1000,\n    infinite: false,\n\n  };\n\n  inputHandler = (event: React.FocusEvent<HTMLInputElement>) => {\n    switch (event.currentTarget.name) {\n      case 'itemWidth': {\n        if (+event.currentTarget.value > 0) {\n          this.setState({ imgWidth: +event.currentTarget.value });\n        } else {\n          this.setState({ imgWidth: 130 });\n        }\n\n        return;\n      }\n\n      case 'frameSize': {\n        if (+event.currentTarget.value\n          && +event.currentTarget.value <= this.state.images.length) {\n          this.setState({ frameSize: +event.currentTarget.value });\n        } else {\n          this.setState({ frameSize: 3 });\n        }\n\n        return;\n      }\n\n      case 'step': {\n        if (+event.currentTarget.value > 0) {\n          this.setState({ step: +event.currentTarget.value });\n        } else {\n          this.setState({ step: 3 });\n        }\n\n        return;\n      }\n\n      case 'animationDuration': {\n        if (+event.currentTarget.value > 500) {\n          this.setState({ animationDur: +event.currentTarget.value });\n        } else {\n          this.setState({ animationDur: 1000 });\n        }\n\n        break;\n      }\n\n      default:\n    }\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      imgWidth,\n      animationDur,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={imgWidth}\n          animationDuration={animationDur}\n          infinite={infinite}\n        />\n        <div className=\"inputs-container\">\n          <label htmlFor=\"itemWidth\">\n            Image size:\n            <input\n              type=\"number\"\n              name=\"itemWidth\"\n              id=\"itemWidth\"\n              min={50}\n              placeholder=\"130\"\n              onBlur={this.inputHandler}\n            />\n          </label>\n          <label htmlFor=\"frameSize\">\n            Frame size:\n            <input\n              type=\"number\"\n              name=\"frameSize\"\n              id=\"frameSize\"\n              min={1}\n              placeholder=\"3\"\n              onBlur={this.inputHandler}\n            />\n          </label>\n          <label htmlFor=\"step\">\n            Step:\n            <input\n              type=\"number\"\n              name=\"step\"\n              id=\"step\"\n              min={1}\n              placeholder=\"3\"\n              onBlur={this.inputHandler}\n            />\n          </label>\n          <label htmlFor=\"animationDuration\">\n            Animation duration:\n            <input\n              type=\"number\"\n              name=\"animationDuration\"\n              id=\"animationDuration\"\n              placeholder=\"1000\"\n              onBlur={this.inputHandler}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}